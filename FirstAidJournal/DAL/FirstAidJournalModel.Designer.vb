
'------------------------------------------------------------------------------
' <auto-generated>
'    This code was generated from a template.
'
'    Manual changes to this file may cause unexpected behavior in your application.
'    Manual changes to this file will be overwritten if the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Imports System
Imports System.ComponentModel
Imports System.Data.EntityClient
Imports System.Data.Objects
Imports System.Data.Objects.DataClasses
Imports System.Linq
Imports System.Runtime.Serialization
Imports System.Xml.Serialization


<Assembly: EdmSchemaAttribute("5747d7ce-5213-4941-88fb-1debe11a2f4d")>
#Region "EDM Relationship Metadata"
<Assembly: EdmRelationshipAttribute("FirstAidJournalModel", "FK_Event_Area", "Area", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(Area), "Event", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType([Event]), True)>
<Assembly: EdmRelationshipAttribute("FirstAidJournalModel", "FK_Event_Injury", "Injury", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(Injury), "Event", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType([Event]), True)>
<Assembly: EdmRelationshipAttribute("FirstAidJournalModel", "FK_EventTreatment_Event", "Event", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType([Event]), "EventTreatment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(EventTreatment), True)>
<Assembly: EdmRelationshipAttribute("FirstAidJournalModel", "FK_EventTreatment_Treatment", "Treatment", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(Treatment), "EventTreatment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(EventTreatment), True)>
<Assembly: EdmRelationshipAttribute("FirstAidJournalModel", "FK_Treatment_TreatmentCategory", "TreatmentCategory", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(TreatmentCategory), "Treatment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(Treatment), True)>
<Assembly: EdmRelationshipAttribute("FirstAidJournalModel", "FK_Event_Person", "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(Person), "Event", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType([Event]), True)>
<Assembly: EdmRelationshipAttribute("FirstAidJournalModel", "FK_Event_Team", "Team", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, GetType(Team), "Event", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType([Event]), True)>
<Assembly: EdmRelationshipAttribute("FirstAidJournalModel", "FK_Person_Team", "Team", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, GetType(Team), "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(Person), True)>
<Assembly: EdmRelationshipAttribute("FirstAidJournalModel", "FK_TeamMember_Team", "Team", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(Team), "TeamMember", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(TeamMember), True)>
<Assembly: EdmRelationshipAttribute("FirstAidJournalModel", "FK_Activity_Team", "Team", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(Team), "Activity", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(Activity), True)>
<Assembly: EdmRelationshipAttribute("FirstAidJournalModel", "FK_ActivityHelper_Activity", "Activity", System.Data.Metadata.Edm.RelationshipMultiplicity.One, GetType(Activity), "ActivityHelper", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(ActivityHelper), True)>
<Assembly: EdmRelationshipAttribute("FirstAidJournalModel", "FK_Event_Activity", "Activity", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, GetType(Activity), "Event", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType([Event]), True)>
<Assembly: EdmRelationshipAttribute("FirstAidJournalModel", "FK_Event_ActivityHelper", "ActivityHelper", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, GetType(ActivityHelper), "Event", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType([Event]), True)>
<Assembly: EdmRelationshipAttribute("FirstAidJournalModel", "FK_Person_Activity", "Activity", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, GetType(Activity), "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, GetType(Person), True)>

#End Region

#Region "Contexts"

''' <summary>
''' No Metadata Documentation available.
''' </summary>
Public Partial Class FirstAidJournalEntities
    Inherits ObjectContext

    #Region "Constructors"

    ''' <summary>
    ''' Initializes a new FirstAidJournalEntities object using the connection string found in the 'FirstAidJournalEntities' section of the application configuration file.
    ''' </summary>
    Public Sub New()
        MyBase.New("name=FirstAidJournalEntities", "FirstAidJournalEntities")
        MyBase.ContextOptions.LazyLoadingEnabled = true
        OnContextCreated()
    End Sub

    ''' <summary>
    ''' Initialize a new FirstAidJournalEntities object.
    ''' </summary>
    Public Sub New(ByVal connectionString As String)
        MyBase.New(connectionString, "FirstAidJournalEntities")
        MyBase.ContextOptions.LazyLoadingEnabled = true
        OnContextCreated()
    End Sub

    ''' <summary>
    ''' Initialize a new FirstAidJournalEntities object.
    ''' </summary>
    Public Sub New(ByVal connection As EntityConnection)
        MyBase.New(connection, "FirstAidJournalEntities")
        MyBase.ContextOptions.LazyLoadingEnabled = true
        OnContextCreated()
    End Sub

    #End Region

    #Region "Partial Methods"

    Partial Private Sub OnContextCreated()
    End Sub

    #End Region

    #Region "ObjectSet Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    Public ReadOnly Property Areas() As ObjectSet(Of Area)
        Get
            If (_Areas Is Nothing) Then
                _Areas = MyBase.CreateObjectSet(Of Area)("Areas")
            End If
            Return _Areas
        End Get
    End Property

    Private _Areas As ObjectSet(Of Area)

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    Public ReadOnly Property Events() As ObjectSet(Of [Event])
        Get
            If (_Events Is Nothing) Then
                _Events = MyBase.CreateObjectSet(Of [Event])("Events")
            End If
            Return _Events
        End Get
    End Property

    Private _Events As ObjectSet(Of [Event])

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    Public ReadOnly Property EventTreatments() As ObjectSet(Of EventTreatment)
        Get
            If (_EventTreatments Is Nothing) Then
                _EventTreatments = MyBase.CreateObjectSet(Of EventTreatment)("EventTreatments")
            End If
            Return _EventTreatments
        End Get
    End Property

    Private _EventTreatments As ObjectSet(Of EventTreatment)

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    Public ReadOnly Property Injuries() As ObjectSet(Of Injury)
        Get
            If (_Injuries Is Nothing) Then
                _Injuries = MyBase.CreateObjectSet(Of Injury)("Injuries")
            End If
            Return _Injuries
        End Get
    End Property

    Private _Injuries As ObjectSet(Of Injury)

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    Public ReadOnly Property People() As ObjectSet(Of Person)
        Get
            If (_People Is Nothing) Then
                _People = MyBase.CreateObjectSet(Of Person)("People")
            End If
            Return _People
        End Get
    End Property

    Private _People As ObjectSet(Of Person)

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    Public ReadOnly Property Treatments() As ObjectSet(Of Treatment)
        Get
            If (_Treatments Is Nothing) Then
                _Treatments = MyBase.CreateObjectSet(Of Treatment)("Treatments")
            End If
            Return _Treatments
        End Get
    End Property

    Private _Treatments As ObjectSet(Of Treatment)

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    Public ReadOnly Property TreatmentCategories() As ObjectSet(Of TreatmentCategory)
        Get
            If (_TreatmentCategories Is Nothing) Then
                _TreatmentCategories = MyBase.CreateObjectSet(Of TreatmentCategory)("TreatmentCategories")
            End If
            Return _TreatmentCategories
        End Get
    End Property

    Private _TreatmentCategories As ObjectSet(Of TreatmentCategory)

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    Public ReadOnly Property Team() As ObjectSet(Of Team)
        Get
            If (_Team Is Nothing) Then
                _Team = MyBase.CreateObjectSet(Of Team)("Team")
            End If
            Return _Team
        End Get
    End Property

    Private _Team As ObjectSet(Of Team)

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    Public ReadOnly Property TeamMember() As ObjectSet(Of TeamMember)
        Get
            If (_TeamMember Is Nothing) Then
                _TeamMember = MyBase.CreateObjectSet(Of TeamMember)("TeamMember")
            End If
            Return _TeamMember
        End Get
    End Property

    Private _TeamMember As ObjectSet(Of TeamMember)

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    Public ReadOnly Property Activity() As ObjectSet(Of Activity)
        Get
            If (_Activity Is Nothing) Then
                _Activity = MyBase.CreateObjectSet(Of Activity)("Activity")
            End If
            Return _Activity
        End Get
    End Property

    Private _Activity As ObjectSet(Of Activity)

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    Public ReadOnly Property ActivityHelper() As ObjectSet(Of ActivityHelper)
        Get
            If (_ActivityHelper Is Nothing) Then
                _ActivityHelper = MyBase.CreateObjectSet(Of ActivityHelper)("ActivityHelper")
            End If
            Return _ActivityHelper
        End Get
    End Property

    Private _ActivityHelper As ObjectSet(Of ActivityHelper)

    #End Region

    #Region "AddTo Methods"

    ''' <summary>
    ''' Deprecated Method for adding a new object to the Areas EntitySet. Consider using the .Add method of the associated ObjectSet(Of T) property instead.
    ''' </summary>
    Public Sub AddToAreas(ByVal area As Area)
        MyBase.AddObject("Areas", area)
    End Sub

    ''' <summary>
    ''' Deprecated Method for adding a new object to the Events EntitySet. Consider using the .Add method of the associated ObjectSet(Of T) property instead.
    ''' </summary>
    Public Sub AddToEvents(ByVal [event] As [Event])
        MyBase.AddObject("Events", [event])
    End Sub

    ''' <summary>
    ''' Deprecated Method for adding a new object to the EventTreatments EntitySet. Consider using the .Add method of the associated ObjectSet(Of T) property instead.
    ''' </summary>
    Public Sub AddToEventTreatments(ByVal eventTreatment As EventTreatment)
        MyBase.AddObject("EventTreatments", eventTreatment)
    End Sub

    ''' <summary>
    ''' Deprecated Method for adding a new object to the Injuries EntitySet. Consider using the .Add method of the associated ObjectSet(Of T) property instead.
    ''' </summary>
    Public Sub AddToInjuries(ByVal injury As Injury)
        MyBase.AddObject("Injuries", injury)
    End Sub

    ''' <summary>
    ''' Deprecated Method for adding a new object to the People EntitySet. Consider using the .Add method of the associated ObjectSet(Of T) property instead.
    ''' </summary>
    Public Sub AddToPeople(ByVal person As Person)
        MyBase.AddObject("People", person)
    End Sub

    ''' <summary>
    ''' Deprecated Method for adding a new object to the Treatments EntitySet. Consider using the .Add method of the associated ObjectSet(Of T) property instead.
    ''' </summary>
    Public Sub AddToTreatments(ByVal treatment As Treatment)
        MyBase.AddObject("Treatments", treatment)
    End Sub

    ''' <summary>
    ''' Deprecated Method for adding a new object to the TreatmentCategories EntitySet. Consider using the .Add method of the associated ObjectSet(Of T) property instead.
    ''' </summary>
    Public Sub AddToTreatmentCategories(ByVal treatmentCategory As TreatmentCategory)
        MyBase.AddObject("TreatmentCategories", treatmentCategory)
    End Sub

    ''' <summary>
    ''' Deprecated Method for adding a new object to the Team EntitySet. Consider using the .Add method of the associated ObjectSet(Of T) property instead.
    ''' </summary>
    Public Sub AddToTeam(ByVal team As Team)
        MyBase.AddObject("Team", team)
    End Sub

    ''' <summary>
    ''' Deprecated Method for adding a new object to the TeamMember EntitySet. Consider using the .Add method of the associated ObjectSet(Of T) property instead.
    ''' </summary>
    Public Sub AddToTeamMember(ByVal teamMember As TeamMember)
        MyBase.AddObject("TeamMember", teamMember)
    End Sub

    ''' <summary>
    ''' Deprecated Method for adding a new object to the Activity EntitySet. Consider using the .Add method of the associated ObjectSet(Of T) property instead.
    ''' </summary>
    Public Sub AddToActivity(ByVal activity As Activity)
        MyBase.AddObject("Activity", activity)
    End Sub

    ''' <summary>
    ''' Deprecated Method for adding a new object to the ActivityHelper EntitySet. Consider using the .Add method of the associated ObjectSet(Of T) property instead.
    ''' </summary>
    Public Sub AddToActivityHelper(ByVal activityHelper As ActivityHelper)
        MyBase.AddObject("ActivityHelper", activityHelper)
    End Sub

    #End Region

    #Region "Function Imports"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    ''' <param name="teamId">No Metadata Documentation available.</param>
    ''' <param name="userId">No Metadata Documentation available.</param>
    Public Function ActivateTeam(teamId As Nullable(Of Global.System.Guid), userId As Nullable(Of Global.System.Guid)) As Integer
        Dim teamIdParameter As ObjectParameter
        If (teamId.HasValue)
            teamIdParameter = New ObjectParameter("teamId", teamId)
        Else
            teamIdParameter = New ObjectParameter("teamId", GetType(Global.System.Guid))
        End If

        Dim userIdParameter As ObjectParameter
        If (userId.HasValue)
            userIdParameter = New ObjectParameter("userId", userId)
        Else
            userIdParameter = New ObjectParameter("userId", GetType(Global.System.Guid))
        End If

        Return MyBase.ExecuteFunction("ActivateTeam", teamIdParameter, userIdParameter)

    End Function

    #End Region

End Class

#End Region

#Region "Entities"

''' <summary>
''' No Metadata Documentation available.
''' </summary>
<EdmEntityTypeAttribute(NamespaceName:="FirstAidJournalModel", Name:="Activity")>
<Serializable()>
<DataContractAttribute(IsReference:=True)>
Public Partial Class Activity
    Inherits EntityObject
    #Region "Factory Method"

    ''' <summary>
    ''' Create a new Activity object.
    ''' </summary>
    ''' <param name="id">Initial value of the Id property.</param>
    ''' <param name="name">Initial value of the Name property.</param>
    ''' <param name="startDate">Initial value of the StartDate property.</param>
    ''' <param name="endDate">Initial value of the EndDate property.</param>
    ''' <param name="teamId">Initial value of the TeamId property.</param>
    ''' <param name="ownerId">Initial value of the OwnerId property.</param>
    ''' <param name="finished">Initial value of the Finished property.</param>
    Public Shared Function CreateActivity(id As Global.System.Guid, name As Global.System.String, startDate As Global.System.DateTime, endDate As Global.System.DateTime, teamId As Global.System.Guid, ownerId As Global.System.Guid, finished As Global.System.Boolean) As Activity
        Dim activity as Activity = New Activity
        activity.Id = id
        activity.Name = name
        activity.StartDate = startDate
        activity.EndDate = endDate
        activity.TeamId = teamId
        activity.OwnerId = ownerId
        activity.Finished = finished
        Return activity
    End Function

    #End Region

    #Region "Primitive Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=true, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property Id() As Global.System.Guid
        Get
            Return _Id
        End Get
        Set
            If (_Id <> Value) Then
                OnIdChanging(value)
                ReportPropertyChanging("Id")
                _Id = StructuralObject.SetValidValue(value)
                ReportPropertyChanged("Id")
                OnIdChanged()
            End If
        End Set
    End Property

    Private _Id As Global.System.Guid
    Private Partial Sub OnIdChanging(value As Global.System.Guid)
    End Sub

    Private Partial Sub OnIdChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property Name() As Global.System.String
        Get
            Return _Name
        End Get
        Set
            OnNameChanging(value)
            ReportPropertyChanging("Name")
            _Name = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("Name")
            OnNameChanged()
        End Set
    End Property

    Private _Name As Global.System.String
    Private Partial Sub OnNameChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnNameChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property StartDate() As Global.System.DateTime
        Get
            Return _StartDate
        End Get
        Set
            OnStartDateChanging(value)
            ReportPropertyChanging("StartDate")
            _StartDate = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("StartDate")
            OnStartDateChanged()
        End Set
    End Property

    Private _StartDate As Global.System.DateTime
    Private Partial Sub OnStartDateChanging(value As Global.System.DateTime)
    End Sub

    Private Partial Sub OnStartDateChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property EndDate() As Global.System.DateTime
        Get
            Return _EndDate
        End Get
        Set
            OnEndDateChanging(value)
            ReportPropertyChanging("EndDate")
            _EndDate = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("EndDate")
            OnEndDateChanged()
        End Set
    End Property

    Private _EndDate As Global.System.DateTime
    Private Partial Sub OnEndDateChanging(value As Global.System.DateTime)
    End Sub

    Private Partial Sub OnEndDateChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property TeamId() As Global.System.Guid
        Get
            Return _TeamId
        End Get
        Set
            OnTeamIdChanging(value)
            ReportPropertyChanging("TeamId")
            _TeamId = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("TeamId")
            OnTeamIdChanged()
        End Set
    End Property

    Private _TeamId As Global.System.Guid
    Private Partial Sub OnTeamIdChanging(value As Global.System.Guid)
    End Sub

    Private Partial Sub OnTeamIdChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property OwnerId() As Global.System.Guid
        Get
            Return _OwnerId
        End Get
        Set
            OnOwnerIdChanging(value)
            ReportPropertyChanging("OwnerId")
            _OwnerId = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("OwnerId")
            OnOwnerIdChanged()
        End Set
    End Property

    Private _OwnerId As Global.System.Guid
    Private Partial Sub OnOwnerIdChanging(value As Global.System.Guid)
    End Sub

    Private Partial Sub OnOwnerIdChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property Finished() As Global.System.Boolean
        Get
            Return _Finished
        End Get
        Set
            OnFinishedChanging(value)
            ReportPropertyChanging("Finished")
            _Finished = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("Finished")
            OnFinishedChanged()
        End Set
    End Property

    Private _Finished As Global.System.Boolean
    Private Partial Sub OnFinishedChanging(value As Global.System.Boolean)
    End Sub

    Private Partial Sub OnFinishedChanged()
    End Sub

    #End Region

    #Region "Navigation Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("FirstAidJournalModel", "FK_Activity_Team", "Team")>
    Public Property Team() As Team
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Team)("FirstAidJournalModel.FK_Activity_Team", "Team").Value
        End Get
        Set
            CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Team)("FirstAidJournalModel.FK_Activity_Team", "Team").Value = value
        End Set
    End Property
    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <BrowsableAttribute(False)>
    <DataMemberAttribute()>
    Public Property TeamReference() As EntityReference(Of Team)
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Team)("FirstAidJournalModel.FK_Activity_Team", "Team")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of Team)("FirstAidJournalModel.FK_Activity_Team", "Team", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("FirstAidJournalModel", "FK_ActivityHelper_Activity", "ActivityHelper")>
     Public Property ActivityHelper() As EntityCollection(Of ActivityHelper)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of ActivityHelper)("FirstAidJournalModel.FK_ActivityHelper_Activity", "ActivityHelper")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of ActivityHelper)("FirstAidJournalModel.FK_ActivityHelper_Activity", "ActivityHelper", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("FirstAidJournalModel", "FK_Event_Activity", "Event")>
     Public Property [Event]() As EntityCollection(Of [Event])
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of [Event])("FirstAidJournalModel.FK_Event_Activity", "Event")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of [Event])("FirstAidJournalModel.FK_Event_Activity", "Event", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("FirstAidJournalModel", "FK_Person_Activity", "Person")>
     Public Property Person() As EntityCollection(Of Person)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of Person)("FirstAidJournalModel.FK_Person_Activity", "Person")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of Person)("FirstAidJournalModel.FK_Person_Activity", "Person", value)
            End If
        End Set
    End Property

    #End Region

End Class

''' <summary>
''' No Metadata Documentation available.
''' </summary>
<EdmEntityTypeAttribute(NamespaceName:="FirstAidJournalModel", Name:="ActivityHelper")>
<Serializable()>
<DataContractAttribute(IsReference:=True)>
Public Partial Class ActivityHelper
    Inherits EntityObject
    #Region "Factory Method"

    ''' <summary>
    ''' Create a new ActivityHelper object.
    ''' </summary>
    ''' <param name="activityId">Initial value of the ActivityId property.</param>
    ''' <param name="initials">Initial value of the Initials property.</param>
    ''' <param name="name">Initial value of the Name property.</param>
    ''' <param name="id">Initial value of the Id property.</param>
    Public Shared Function CreateActivityHelper(activityId As Global.System.Guid, initials As Global.System.String, name As Global.System.String, id As Global.System.Guid) As ActivityHelper
        Dim activityHelper as ActivityHelper = New ActivityHelper
        activityHelper.ActivityId = activityId
        activityHelper.Initials = initials
        activityHelper.Name = name
        activityHelper.Id = id
        Return activityHelper
    End Function

    #End Region

    #Region "Primitive Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property ActivityId() As Global.System.Guid
        Get
            Return _ActivityId
        End Get
        Set
            OnActivityIdChanging(value)
            ReportPropertyChanging("ActivityId")
            _ActivityId = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("ActivityId")
            OnActivityIdChanged()
        End Set
    End Property

    Private _ActivityId As Global.System.Guid
    Private Partial Sub OnActivityIdChanging(value As Global.System.Guid)
    End Sub

    Private Partial Sub OnActivityIdChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property Initials() As Global.System.String
        Get
            Return _Initials
        End Get
        Set
            OnInitialsChanging(value)
            ReportPropertyChanging("Initials")
            _Initials = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("Initials")
            OnInitialsChanged()
        End Set
    End Property

    Private _Initials As Global.System.String
    Private Partial Sub OnInitialsChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnInitialsChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property Name() As Global.System.String
        Get
            Return _Name
        End Get
        Set
            OnNameChanging(value)
            ReportPropertyChanging("Name")
            _Name = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("Name")
            OnNameChanged()
        End Set
    End Property

    Private _Name As Global.System.String
    Private Partial Sub OnNameChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnNameChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=true, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property Id() As Global.System.Guid
        Get
            Return _Id
        End Get
        Set
            If (_Id <> Value) Then
                OnIdChanging(value)
                ReportPropertyChanging("Id")
                _Id = StructuralObject.SetValidValue(value)
                ReportPropertyChanged("Id")
                OnIdChanged()
            End If
        End Set
    End Property

    Private _Id As Global.System.Guid
    Private Partial Sub OnIdChanging(value As Global.System.Guid)
    End Sub

    Private Partial Sub OnIdChanged()
    End Sub

    #End Region

    #Region "Navigation Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("FirstAidJournalModel", "FK_ActivityHelper_Activity", "Activity")>
    Public Property Activity() As Activity
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Activity)("FirstAidJournalModel.FK_ActivityHelper_Activity", "Activity").Value
        End Get
        Set
            CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Activity)("FirstAidJournalModel.FK_ActivityHelper_Activity", "Activity").Value = value
        End Set
    End Property
    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <BrowsableAttribute(False)>
    <DataMemberAttribute()>
    Public Property ActivityReference() As EntityReference(Of Activity)
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Activity)("FirstAidJournalModel.FK_ActivityHelper_Activity", "Activity")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of Activity)("FirstAidJournalModel.FK_ActivityHelper_Activity", "Activity", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("FirstAidJournalModel", "FK_Event_ActivityHelper", "Event")>
     Public Property [Event]() As EntityCollection(Of [Event])
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of [Event])("FirstAidJournalModel.FK_Event_ActivityHelper", "Event")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of [Event])("FirstAidJournalModel.FK_Event_ActivityHelper", "Event", value)
            End If
        End Set
    End Property

    #End Region

End Class

''' <summary>
''' No Metadata Documentation available.
''' </summary>
<EdmEntityTypeAttribute(NamespaceName:="FirstAidJournalModel", Name:="Area")>
<Serializable()>
<DataContractAttribute(IsReference:=True)>
Public Partial Class Area
    Inherits EntityObject
    #Region "Factory Method"

    ''' <summary>
    ''' Create a new Area object.
    ''' </summary>
    ''' <param name="id">Initial value of the Id property.</param>
    ''' <param name="name">Initial value of the Name property.</param>
    ''' <param name="x">Initial value of the X property.</param>
    ''' <param name="y">Initial value of the Y property.</param>
    Public Shared Function CreateArea(id As Global.System.Guid, name As Global.System.String, x As Global.System.Int32, y As Global.System.Int32) As Area
        Dim area as Area = New Area
        area.Id = id
        area.Name = name
        area.X = x
        area.Y = y
        Return area
    End Function

    #End Region

    #Region "Primitive Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=true, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property Id() As Global.System.Guid
        Get
            Return _Id
        End Get
        Set
            If (_Id <> Value) Then
                OnIdChanging(value)
                ReportPropertyChanging("Id")
                _Id = StructuralObject.SetValidValue(value)
                ReportPropertyChanged("Id")
                OnIdChanged()
            End If
        End Set
    End Property

    Private _Id As Global.System.Guid
    Private Partial Sub OnIdChanging(value As Global.System.Guid)
    End Sub

    Private Partial Sub OnIdChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property Name() As Global.System.String
        Get
            Return _Name
        End Get
        Set
            OnNameChanging(value)
            ReportPropertyChanging("Name")
            _Name = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("Name")
            OnNameChanged()
        End Set
    End Property

    Private _Name As Global.System.String
    Private Partial Sub OnNameChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnNameChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property X() As Global.System.Int32
        Get
            Return _X
        End Get
        Set
            OnXChanging(value)
            ReportPropertyChanging("X")
            _X = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("X")
            OnXChanged()
        End Set
    End Property

    Private _X As Global.System.Int32
    Private Partial Sub OnXChanging(value As Global.System.Int32)
    End Sub

    Private Partial Sub OnXChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property Y() As Global.System.Int32
        Get
            Return _Y
        End Get
        Set
            OnYChanging(value)
            ReportPropertyChanging("Y")
            _Y = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("Y")
            OnYChanged()
        End Set
    End Property

    Private _Y As Global.System.Int32
    Private Partial Sub OnYChanging(value As Global.System.Int32)
    End Sub

    Private Partial Sub OnYChanged()
    End Sub

    #End Region

    #Region "Navigation Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("FirstAidJournalModel", "FK_Event_Area", "Event")>
     Public Property Events() As EntityCollection(Of [Event])
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of [Event])("FirstAidJournalModel.FK_Event_Area", "Event")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of [Event])("FirstAidJournalModel.FK_Event_Area", "Event", value)
            End If
        End Set
    End Property

    #End Region

End Class

''' <summary>
''' No Metadata Documentation available.
''' </summary>
<EdmEntityTypeAttribute(NamespaceName:="FirstAidJournalModel", Name:="Event")>
<Serializable()>
<DataContractAttribute(IsReference:=True)>
Public Partial Class [Event]
    Inherits EntityObject
    #Region "Factory Method"

    ''' <summary>
    ''' Create a new Event object.
    ''' </summary>
    ''' <param name="id">Initial value of the Id property.</param>
    ''' <param name="personId">Initial value of the PersonId property.</param>
    ''' <param name="timestamp">Initial value of the Timestamp property.</param>
    ''' <param name="injuryId">Initial value of the InjuryId property.</param>
    ''' <param name="areaId">Initial value of the AreaId property.</param>
    ''' <param name="ownerId">Initial value of the OwnerId property.</param>
    Public Shared Function CreateEvent(id As Global.System.Guid, personId As Global.System.Guid, timestamp As Global.System.DateTime, injuryId As Global.System.Guid, areaId As Global.System.Guid, ownerId As Global.System.Guid) As [Event]
        Dim [event] as [Event] = New [Event]
        [event].Id = id
        [event].PersonId = personId
        [event].Timestamp = timestamp
        [event].InjuryId = injuryId
        [event].AreaId = areaId
        [event].OwnerId = ownerId
        Return [event]
    End Function

    #End Region

    #Region "Primitive Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=true, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property Id() As Global.System.Guid
        Get
            Return _Id
        End Get
        Set
            If (_Id <> Value) Then
                OnIdChanging(value)
                ReportPropertyChanging("Id")
                _Id = StructuralObject.SetValidValue(value)
                ReportPropertyChanged("Id")
                OnIdChanged()
            End If
        End Set
    End Property

    Private _Id As Global.System.Guid
    Private Partial Sub OnIdChanging(value As Global.System.Guid)
    End Sub

    Private Partial Sub OnIdChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property PersonId() As Global.System.Guid
        Get
            Return _PersonId
        End Get
        Set
            OnPersonIdChanging(value)
            ReportPropertyChanging("PersonId")
            _PersonId = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("PersonId")
            OnPersonIdChanged()
        End Set
    End Property

    Private _PersonId As Global.System.Guid
    Private Partial Sub OnPersonIdChanging(value As Global.System.Guid)
    End Sub

    Private Partial Sub OnPersonIdChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property Timestamp() As Global.System.DateTime
        Get
            Return _Timestamp
        End Get
        Set
            OnTimestampChanging(value)
            ReportPropertyChanging("Timestamp")
            _Timestamp = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("Timestamp")
            OnTimestampChanged()
        End Set
    End Property

    Private _Timestamp As Global.System.DateTime
    Private Partial Sub OnTimestampChanging(value As Global.System.DateTime)
    End Sub

    Private Partial Sub OnTimestampChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property InjuryId() As Global.System.Guid
        Get
            Return _InjuryId
        End Get
        Set
            OnInjuryIdChanging(value)
            ReportPropertyChanging("InjuryId")
            _InjuryId = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("InjuryId")
            OnInjuryIdChanged()
        End Set
    End Property

    Private _InjuryId As Global.System.Guid
    Private Partial Sub OnInjuryIdChanging(value As Global.System.Guid)
    End Sub

    Private Partial Sub OnInjuryIdChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property AreaId() As Global.System.Guid
        Get
            Return _AreaId
        End Get
        Set
            OnAreaIdChanging(value)
            ReportPropertyChanging("AreaId")
            _AreaId = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("AreaId")
            OnAreaIdChanged()
        End Set
    End Property

    Private _AreaId As Global.System.Guid
    Private Partial Sub OnAreaIdChanging(value As Global.System.Guid)
    End Sub

    Private Partial Sub OnAreaIdChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=true)>
    <DataMemberAttribute()>
    Public Property Notes() As Global.System.String
        Get
            Return _Notes
        End Get
        Set
            OnNotesChanging(value)
            ReportPropertyChanging("Notes")
            _Notes = StructuralObject.SetValidValue(value, true)
            ReportPropertyChanged("Notes")
            OnNotesChanged()
        End Set
    End Property

    Private _Notes As Global.System.String
    Private Partial Sub OnNotesChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnNotesChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=true)>
    <DataMemberAttribute()>
    Public Property TeamId() As Nullable(Of Global.System.Guid)
        Get
            Return _TeamId
        End Get
        Set
            OnTeamIdChanging(value)
            ReportPropertyChanging("TeamId")
            _TeamId = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("TeamId")
            OnTeamIdChanged()
        End Set
    End Property

    Private _TeamId As Nullable(Of Global.System.Guid)
    Private Partial Sub OnTeamIdChanging(value As Nullable(Of Global.System.Guid))
    End Sub

    Private Partial Sub OnTeamIdChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=true)>
    <DataMemberAttribute()>
    Public Property ActivityId() As Nullable(Of Global.System.Guid)
        Get
            Return _ActivityId
        End Get
        Set
            OnActivityIdChanging(value)
            ReportPropertyChanging("ActivityId")
            _ActivityId = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("ActivityId")
            OnActivityIdChanged()
        End Set
    End Property

    Private _ActivityId As Nullable(Of Global.System.Guid)
    Private Partial Sub OnActivityIdChanging(value As Nullable(Of Global.System.Guid))
    End Sub

    Private Partial Sub OnActivityIdChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property OwnerId() As Global.System.Guid
        Get
            Return _OwnerId
        End Get
        Set
            OnOwnerIdChanging(value)
            ReportPropertyChanging("OwnerId")
            _OwnerId = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("OwnerId")
            OnOwnerIdChanged()
        End Set
    End Property

    Private _OwnerId As Global.System.Guid
    Private Partial Sub OnOwnerIdChanging(value As Global.System.Guid)
    End Sub

    Private Partial Sub OnOwnerIdChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=true)>
    <DataMemberAttribute()>
    Public Property HelperId() As Nullable(Of Global.System.Guid)
        Get
            Return _HelperId
        End Get
        Set
            OnHelperIdChanging(value)
            ReportPropertyChanging("HelperId")
            _HelperId = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("HelperId")
            OnHelperIdChanged()
        End Set
    End Property

    Private _HelperId As Nullable(Of Global.System.Guid)
    Private Partial Sub OnHelperIdChanging(value As Nullable(Of Global.System.Guid))
    End Sub

    Private Partial Sub OnHelperIdChanged()
    End Sub

    #End Region

    #Region "Navigation Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("FirstAidJournalModel", "FK_Event_Area", "Area")>
    Public Property Area() As Area
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Area)("FirstAidJournalModel.FK_Event_Area", "Area").Value
        End Get
        Set
            CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Area)("FirstAidJournalModel.FK_Event_Area", "Area").Value = value
        End Set
    End Property
    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <BrowsableAttribute(False)>
    <DataMemberAttribute()>
    Public Property AreaReference() As EntityReference(Of Area)
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Area)("FirstAidJournalModel.FK_Event_Area", "Area")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of Area)("FirstAidJournalModel.FK_Event_Area", "Area", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("FirstAidJournalModel", "FK_Event_Injury", "Injury")>
    Public Property Injury() As Injury
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Injury)("FirstAidJournalModel.FK_Event_Injury", "Injury").Value
        End Get
        Set
            CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Injury)("FirstAidJournalModel.FK_Event_Injury", "Injury").Value = value
        End Set
    End Property
    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <BrowsableAttribute(False)>
    <DataMemberAttribute()>
    Public Property InjuryReference() As EntityReference(Of Injury)
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Injury)("FirstAidJournalModel.FK_Event_Injury", "Injury")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of Injury)("FirstAidJournalModel.FK_Event_Injury", "Injury", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("FirstAidJournalModel", "FK_EventTreatment_Event", "EventTreatment")>
     Public Property EventTreatments() As EntityCollection(Of EventTreatment)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of EventTreatment)("FirstAidJournalModel.FK_EventTreatment_Event", "EventTreatment")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of EventTreatment)("FirstAidJournalModel.FK_EventTreatment_Event", "EventTreatment", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("FirstAidJournalModel", "FK_Event_Person", "Person")>
    Public Property Person() As Person
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Person)("FirstAidJournalModel.FK_Event_Person", "Person").Value
        End Get
        Set
            CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Person)("FirstAidJournalModel.FK_Event_Person", "Person").Value = value
        End Set
    End Property
    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <BrowsableAttribute(False)>
    <DataMemberAttribute()>
    Public Property PersonReference() As EntityReference(Of Person)
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Person)("FirstAidJournalModel.FK_Event_Person", "Person")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of Person)("FirstAidJournalModel.FK_Event_Person", "Person", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("FirstAidJournalModel", "FK_Event_Team", "Team")>
    Public Property Team() As Team
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Team)("FirstAidJournalModel.FK_Event_Team", "Team").Value
        End Get
        Set
            CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Team)("FirstAidJournalModel.FK_Event_Team", "Team").Value = value
        End Set
    End Property
    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <BrowsableAttribute(False)>
    <DataMemberAttribute()>
    Public Property TeamReference() As EntityReference(Of Team)
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Team)("FirstAidJournalModel.FK_Event_Team", "Team")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of Team)("FirstAidJournalModel.FK_Event_Team", "Team", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("FirstAidJournalModel", "FK_Event_Activity", "Activity")>
    Public Property Activity() As Activity
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Activity)("FirstAidJournalModel.FK_Event_Activity", "Activity").Value
        End Get
        Set
            CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Activity)("FirstAidJournalModel.FK_Event_Activity", "Activity").Value = value
        End Set
    End Property
    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <BrowsableAttribute(False)>
    <DataMemberAttribute()>
    Public Property ActivityReference() As EntityReference(Of Activity)
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Activity)("FirstAidJournalModel.FK_Event_Activity", "Activity")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of Activity)("FirstAidJournalModel.FK_Event_Activity", "Activity", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("FirstAidJournalModel", "FK_Event_ActivityHelper", "ActivityHelper")>
    Public Property ActivityHelper() As ActivityHelper
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of ActivityHelper)("FirstAidJournalModel.FK_Event_ActivityHelper", "ActivityHelper").Value
        End Get
        Set
            CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of ActivityHelper)("FirstAidJournalModel.FK_Event_ActivityHelper", "ActivityHelper").Value = value
        End Set
    End Property
    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <BrowsableAttribute(False)>
    <DataMemberAttribute()>
    Public Property ActivityHelperReference() As EntityReference(Of ActivityHelper)
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of ActivityHelper)("FirstAidJournalModel.FK_Event_ActivityHelper", "ActivityHelper")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of ActivityHelper)("FirstAidJournalModel.FK_Event_ActivityHelper", "ActivityHelper", value)
            End If
        End Set
    End Property

    #End Region

End Class

''' <summary>
''' No Metadata Documentation available.
''' </summary>
<EdmEntityTypeAttribute(NamespaceName:="FirstAidJournalModel", Name:="EventTreatment")>
<Serializable()>
<DataContractAttribute(IsReference:=True)>
Public Partial Class EventTreatment
    Inherits EntityObject
    #Region "Factory Method"

    ''' <summary>
    ''' Create a new EventTreatment object.
    ''' </summary>
    ''' <param name="id">Initial value of the Id property.</param>
    ''' <param name="eventId">Initial value of the EventId property.</param>
    ''' <param name="treatmentId">Initial value of the TreatmentId property.</param>
    Public Shared Function CreateEventTreatment(id As Global.System.Guid, eventId As Global.System.Guid, treatmentId As Global.System.Guid) As EventTreatment
        Dim eventTreatment as EventTreatment = New EventTreatment
        eventTreatment.Id = id
        eventTreatment.EventId = eventId
        eventTreatment.TreatmentId = treatmentId
        Return eventTreatment
    End Function

    #End Region

    #Region "Primitive Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=true, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property Id() As Global.System.Guid
        Get
            Return _Id
        End Get
        Set
            If (_Id <> Value) Then
                OnIdChanging(value)
                ReportPropertyChanging("Id")
                _Id = StructuralObject.SetValidValue(value)
                ReportPropertyChanged("Id")
                OnIdChanged()
            End If
        End Set
    End Property

    Private _Id As Global.System.Guid
    Private Partial Sub OnIdChanging(value As Global.System.Guid)
    End Sub

    Private Partial Sub OnIdChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property EventId() As Global.System.Guid
        Get
            Return _EventId
        End Get
        Set
            OnEventIdChanging(value)
            ReportPropertyChanging("EventId")
            _EventId = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("EventId")
            OnEventIdChanged()
        End Set
    End Property

    Private _EventId As Global.System.Guid
    Private Partial Sub OnEventIdChanging(value As Global.System.Guid)
    End Sub

    Private Partial Sub OnEventIdChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property TreatmentId() As Global.System.Guid
        Get
            Return _TreatmentId
        End Get
        Set
            OnTreatmentIdChanging(value)
            ReportPropertyChanging("TreatmentId")
            _TreatmentId = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("TreatmentId")
            OnTreatmentIdChanged()
        End Set
    End Property

    Private _TreatmentId As Global.System.Guid
    Private Partial Sub OnTreatmentIdChanging(value As Global.System.Guid)
    End Sub

    Private Partial Sub OnTreatmentIdChanged()
    End Sub

    #End Region

    #Region "Navigation Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("FirstAidJournalModel", "FK_EventTreatment_Event", "Event")>
    Public Property [Event]() As [Event]
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of [Event])("FirstAidJournalModel.FK_EventTreatment_Event", "Event").Value
        End Get
        Set
            CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of [Event])("FirstAidJournalModel.FK_EventTreatment_Event", "Event").Value = value
        End Set
    End Property
    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <BrowsableAttribute(False)>
    <DataMemberAttribute()>
    Public Property EventReference() As EntityReference(Of [Event])
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of [Event])("FirstAidJournalModel.FK_EventTreatment_Event", "Event")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of [Event])("FirstAidJournalModel.FK_EventTreatment_Event", "Event", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("FirstAidJournalModel", "FK_EventTreatment_Treatment", "Treatment")>
    Public Property Treatment() As Treatment
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Treatment)("FirstAidJournalModel.FK_EventTreatment_Treatment", "Treatment").Value
        End Get
        Set
            CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Treatment)("FirstAidJournalModel.FK_EventTreatment_Treatment", "Treatment").Value = value
        End Set
    End Property
    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <BrowsableAttribute(False)>
    <DataMemberAttribute()>
    Public Property TreatmentReference() As EntityReference(Of Treatment)
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Treatment)("FirstAidJournalModel.FK_EventTreatment_Treatment", "Treatment")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of Treatment)("FirstAidJournalModel.FK_EventTreatment_Treatment", "Treatment", value)
            End If
        End Set
    End Property

    #End Region

End Class

''' <summary>
''' No Metadata Documentation available.
''' </summary>
<EdmEntityTypeAttribute(NamespaceName:="FirstAidJournalModel", Name:="Injury")>
<Serializable()>
<DataContractAttribute(IsReference:=True)>
Public Partial Class Injury
    Inherits EntityObject
    #Region "Factory Method"

    ''' <summary>
    ''' Create a new Injury object.
    ''' </summary>
    ''' <param name="id">Initial value of the Id property.</param>
    ''' <param name="name">Initial value of the Name property.</param>
    Public Shared Function CreateInjury(id As Global.System.Guid, name As Global.System.String) As Injury
        Dim injury as Injury = New Injury
        injury.Id = id
        injury.Name = name
        Return injury
    End Function

    #End Region

    #Region "Primitive Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=true, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property Id() As Global.System.Guid
        Get
            Return _Id
        End Get
        Set
            If (_Id <> Value) Then
                OnIdChanging(value)
                ReportPropertyChanging("Id")
                _Id = StructuralObject.SetValidValue(value)
                ReportPropertyChanged("Id")
                OnIdChanged()
            End If
        End Set
    End Property

    Private _Id As Global.System.Guid
    Private Partial Sub OnIdChanging(value As Global.System.Guid)
    End Sub

    Private Partial Sub OnIdChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property Name() As Global.System.String
        Get
            Return _Name
        End Get
        Set
            OnNameChanging(value)
            ReportPropertyChanging("Name")
            _Name = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("Name")
            OnNameChanged()
        End Set
    End Property

    Private _Name As Global.System.String
    Private Partial Sub OnNameChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnNameChanged()
    End Sub

    #End Region

    #Region "Navigation Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("FirstAidJournalModel", "FK_Event_Injury", "Event")>
     Public Property Events() As EntityCollection(Of [Event])
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of [Event])("FirstAidJournalModel.FK_Event_Injury", "Event")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of [Event])("FirstAidJournalModel.FK_Event_Injury", "Event", value)
            End If
        End Set
    End Property

    #End Region

End Class

''' <summary>
''' No Metadata Documentation available.
''' </summary>
<EdmEntityTypeAttribute(NamespaceName:="FirstAidJournalModel", Name:="Person")>
<Serializable()>
<DataContractAttribute(IsReference:=True)>
Public Partial Class Person
    Inherits EntityObject
    #Region "Factory Method"

    ''' <summary>
    ''' Create a new Person object.
    ''' </summary>
    ''' <param name="id">Initial value of the Id property.</param>
    ''' <param name="name">Initial value of the Name property.</param>
    Public Shared Function CreatePerson(id As Global.System.Guid, name As Global.System.String) As Person
        Dim person as Person = New Person
        person.Id = id
        person.Name = name
        Return person
    End Function

    #End Region

    #Region "Primitive Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=true, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property Id() As Global.System.Guid
        Get
            Return _Id
        End Get
        Set
            If (_Id <> Value) Then
                OnIdChanging(value)
                ReportPropertyChanging("Id")
                _Id = StructuralObject.SetValidValue(value)
                ReportPropertyChanged("Id")
                OnIdChanged()
            End If
        End Set
    End Property

    Private _Id As Global.System.Guid
    Private Partial Sub OnIdChanging(value As Global.System.Guid)
    End Sub

    Private Partial Sub OnIdChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property Name() As Global.System.String
        Get
            Return _Name
        End Get
        Set
            OnNameChanging(value)
            ReportPropertyChanging("Name")
            _Name = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("Name")
            OnNameChanged()
        End Set
    End Property

    Private _Name As Global.System.String
    Private Partial Sub OnNameChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnNameChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=true)>
    <DataMemberAttribute()>
    Public Property Gender() As Nullable(Of Global.System.Int32)
        Get
            Return _Gender
        End Get
        Set
            OnGenderChanging(value)
            ReportPropertyChanging("Gender")
            _Gender = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("Gender")
            OnGenderChanged()
        End Set
    End Property

    Private _Gender As Nullable(Of Global.System.Int32)
    Private Partial Sub OnGenderChanging(value As Nullable(Of Global.System.Int32))
    End Sub

    Private Partial Sub OnGenderChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=true)>
    <DataMemberAttribute()>
    Public Property Age() As Nullable(Of Global.System.Int32)
        Get
            Return _Age
        End Get
        Set
            OnAgeChanging(value)
            ReportPropertyChanging("Age")
            _Age = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("Age")
            OnAgeChanged()
        End Set
    End Property

    Private _Age As Nullable(Of Global.System.Int32)
    Private Partial Sub OnAgeChanging(value As Nullable(Of Global.System.Int32))
    End Sub

    Private Partial Sub OnAgeChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=true)>
    <DataMemberAttribute()>
    Public Property TeamId() As Nullable(Of Global.System.Guid)
        Get
            Return _TeamId
        End Get
        Set
            OnTeamIdChanging(value)
            ReportPropertyChanging("TeamId")
            _TeamId = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("TeamId")
            OnTeamIdChanged()
        End Set
    End Property

    Private _TeamId As Nullable(Of Global.System.Guid)
    Private Partial Sub OnTeamIdChanging(value As Nullable(Of Global.System.Guid))
    End Sub

    Private Partial Sub OnTeamIdChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=true)>
    <DataMemberAttribute()>
    Public Property ActivityId() As Nullable(Of Global.System.Guid)
        Get
            Return _ActivityId
        End Get
        Set
            OnActivityIdChanging(value)
            ReportPropertyChanging("ActivityId")
            _ActivityId = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("ActivityId")
            OnActivityIdChanged()
        End Set
    End Property

    Private _ActivityId As Nullable(Of Global.System.Guid)
    Private Partial Sub OnActivityIdChanging(value As Nullable(Of Global.System.Guid))
    End Sub

    Private Partial Sub OnActivityIdChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=true)>
    <DataMemberAttribute()>
    Public Property OwnerId() As Nullable(Of Global.System.Guid)
        Get
            Return _OwnerId
        End Get
        Set
            OnOwnerIdChanging(value)
            ReportPropertyChanging("OwnerId")
            _OwnerId = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("OwnerId")
            OnOwnerIdChanged()
        End Set
    End Property

    Private _OwnerId As Nullable(Of Global.System.Guid)
    Private Partial Sub OnOwnerIdChanging(value As Nullable(Of Global.System.Guid))
    End Sub

    Private Partial Sub OnOwnerIdChanged()
    End Sub

    #End Region

    #Region "Navigation Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("FirstAidJournalModel", "FK_Event_Person", "Event")>
     Public Property [Event]() As EntityCollection(Of [Event])
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of [Event])("FirstAidJournalModel.FK_Event_Person", "Event")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of [Event])("FirstAidJournalModel.FK_Event_Person", "Event", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("FirstAidJournalModel", "FK_Person_Team", "Team")>
    Public Property Team() As Team
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Team)("FirstAidJournalModel.FK_Person_Team", "Team").Value
        End Get
        Set
            CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Team)("FirstAidJournalModel.FK_Person_Team", "Team").Value = value
        End Set
    End Property
    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <BrowsableAttribute(False)>
    <DataMemberAttribute()>
    Public Property TeamReference() As EntityReference(Of Team)
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Team)("FirstAidJournalModel.FK_Person_Team", "Team")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of Team)("FirstAidJournalModel.FK_Person_Team", "Team", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("FirstAidJournalModel", "FK_Person_Activity", "Activity")>
    Public Property Activity() As Activity
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Activity)("FirstAidJournalModel.FK_Person_Activity", "Activity").Value
        End Get
        Set
            CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Activity)("FirstAidJournalModel.FK_Person_Activity", "Activity").Value = value
        End Set
    End Property
    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <BrowsableAttribute(False)>
    <DataMemberAttribute()>
    Public Property ActivityReference() As EntityReference(Of Activity)
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Activity)("FirstAidJournalModel.FK_Person_Activity", "Activity")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of Activity)("FirstAidJournalModel.FK_Person_Activity", "Activity", value)
            End If
        End Set
    End Property

    #End Region

End Class

''' <summary>
''' No Metadata Documentation available.
''' </summary>
<EdmEntityTypeAttribute(NamespaceName:="FirstAidJournalModel", Name:="Team")>
<Serializable()>
<DataContractAttribute(IsReference:=True)>
Public Partial Class Team
    Inherits EntityObject
    #Region "Factory Method"

    ''' <summary>
    ''' Create a new Team object.
    ''' </summary>
    ''' <param name="id">Initial value of the Id property.</param>
    ''' <param name="name">Initial value of the Name property.</param>
    ''' <param name="ownerId">Initial value of the OwnerId property.</param>
    Public Shared Function CreateTeam(id As Global.System.Guid, name As Global.System.String, ownerId As Global.System.Guid) As Team
        Dim team as Team = New Team
        team.Id = id
        team.Name = name
        team.OwnerId = ownerId
        Return team
    End Function

    #End Region

    #Region "Primitive Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=true, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property Id() As Global.System.Guid
        Get
            Return _Id
        End Get
        Set
            If (_Id <> Value) Then
                OnIdChanging(value)
                ReportPropertyChanging("Id")
                _Id = StructuralObject.SetValidValue(value)
                ReportPropertyChanged("Id")
                OnIdChanged()
            End If
        End Set
    End Property

    Private _Id As Global.System.Guid
    Private Partial Sub OnIdChanging(value As Global.System.Guid)
    End Sub

    Private Partial Sub OnIdChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property Name() As Global.System.String
        Get
            Return _Name
        End Get
        Set
            OnNameChanging(value)
            ReportPropertyChanging("Name")
            _Name = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("Name")
            OnNameChanged()
        End Set
    End Property

    Private _Name As Global.System.String
    Private Partial Sub OnNameChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnNameChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property OwnerId() As Global.System.Guid
        Get
            Return _OwnerId
        End Get
        Set
            OnOwnerIdChanging(value)
            ReportPropertyChanging("OwnerId")
            _OwnerId = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("OwnerId")
            OnOwnerIdChanged()
        End Set
    End Property

    Private _OwnerId As Global.System.Guid
    Private Partial Sub OnOwnerIdChanging(value As Global.System.Guid)
    End Sub

    Private Partial Sub OnOwnerIdChanged()
    End Sub

    #End Region

    #Region "Navigation Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("FirstAidJournalModel", "FK_Event_Team", "Event")>
     Public Property [Event]() As EntityCollection(Of [Event])
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of [Event])("FirstAidJournalModel.FK_Event_Team", "Event")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of [Event])("FirstAidJournalModel.FK_Event_Team", "Event", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("FirstAidJournalModel", "FK_Person_Team", "Person")>
     Public Property Person() As EntityCollection(Of Person)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of Person)("FirstAidJournalModel.FK_Person_Team", "Person")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of Person)("FirstAidJournalModel.FK_Person_Team", "Person", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("FirstAidJournalModel", "FK_TeamMember_Team", "TeamMember")>
     Public Property TeamMember() As EntityCollection(Of TeamMember)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of TeamMember)("FirstAidJournalModel.FK_TeamMember_Team", "TeamMember")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of TeamMember)("FirstAidJournalModel.FK_TeamMember_Team", "TeamMember", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("FirstAidJournalModel", "FK_Activity_Team", "Activity")>
     Public Property Activity() As EntityCollection(Of Activity)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of Activity)("FirstAidJournalModel.FK_Activity_Team", "Activity")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of Activity)("FirstAidJournalModel.FK_Activity_Team", "Activity", value)
            End If
        End Set
    End Property

    #End Region

End Class

''' <summary>
''' No Metadata Documentation available.
''' </summary>
<EdmEntityTypeAttribute(NamespaceName:="FirstAidJournalModel", Name:="TeamMember")>
<Serializable()>
<DataContractAttribute(IsReference:=True)>
Public Partial Class TeamMember
    Inherits EntityObject
    #Region "Factory Method"

    ''' <summary>
    ''' Create a new TeamMember object.
    ''' </summary>
    ''' <param name="teamId">Initial value of the TeamId property.</param>
    ''' <param name="userId">Initial value of the UserId property.</param>
    ''' <param name="administrator">Initial value of the Administrator property.</param>
    ''' <param name="confirmed">Initial value of the Confirmed property.</param>
    ''' <param name="active">Initial value of the Active property.</param>
    Public Shared Function CreateTeamMember(teamId As Global.System.Guid, userId As Global.System.Guid, administrator As Global.System.Boolean, confirmed As Global.System.Boolean, active As Global.System.Boolean) As TeamMember
        Dim teamMember as TeamMember = New TeamMember
        teamMember.TeamId = teamId
        teamMember.UserId = userId
        teamMember.Administrator = administrator
        teamMember.Confirmed = confirmed
        teamMember.Active = active
        Return teamMember
    End Function

    #End Region

    #Region "Primitive Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=true, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property TeamId() As Global.System.Guid
        Get
            Return _TeamId
        End Get
        Set
            If (_TeamId <> Value) Then
                OnTeamIdChanging(value)
                ReportPropertyChanging("TeamId")
                _TeamId = StructuralObject.SetValidValue(value)
                ReportPropertyChanged("TeamId")
                OnTeamIdChanged()
            End If
        End Set
    End Property

    Private _TeamId As Global.System.Guid
    Private Partial Sub OnTeamIdChanging(value As Global.System.Guid)
    End Sub

    Private Partial Sub OnTeamIdChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=true, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property UserId() As Global.System.Guid
        Get
            Return _UserId
        End Get
        Set
            If (_UserId <> Value) Then
                OnUserIdChanging(value)
                ReportPropertyChanging("UserId")
                _UserId = StructuralObject.SetValidValue(value)
                ReportPropertyChanged("UserId")
                OnUserIdChanged()
            End If
        End Set
    End Property

    Private _UserId As Global.System.Guid
    Private Partial Sub OnUserIdChanging(value As Global.System.Guid)
    End Sub

    Private Partial Sub OnUserIdChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property Administrator() As Global.System.Boolean
        Get
            Return _Administrator
        End Get
        Set
            OnAdministratorChanging(value)
            ReportPropertyChanging("Administrator")
            _Administrator = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("Administrator")
            OnAdministratorChanged()
        End Set
    End Property

    Private _Administrator As Global.System.Boolean
    Private Partial Sub OnAdministratorChanging(value As Global.System.Boolean)
    End Sub

    Private Partial Sub OnAdministratorChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property Confirmed() As Global.System.Boolean
        Get
            Return _Confirmed
        End Get
        Set
            OnConfirmedChanging(value)
            ReportPropertyChanging("Confirmed")
            _Confirmed = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("Confirmed")
            OnConfirmedChanged()
        End Set
    End Property

    Private _Confirmed As Global.System.Boolean
    Private Partial Sub OnConfirmedChanging(value As Global.System.Boolean)
    End Sub

    Private Partial Sub OnConfirmedChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property Active() As Global.System.Boolean
        Get
            Return _Active
        End Get
        Set
            OnActiveChanging(value)
            ReportPropertyChanging("Active")
            _Active = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("Active")
            OnActiveChanged()
        End Set
    End Property

    Private _Active As Global.System.Boolean
    Private Partial Sub OnActiveChanging(value As Global.System.Boolean)
    End Sub

    Private Partial Sub OnActiveChanged()
    End Sub

    #End Region

    #Region "Navigation Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("FirstAidJournalModel", "FK_TeamMember_Team", "Team")>
    Public Property Team() As Team
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Team)("FirstAidJournalModel.FK_TeamMember_Team", "Team").Value
        End Get
        Set
            CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Team)("FirstAidJournalModel.FK_TeamMember_Team", "Team").Value = value
        End Set
    End Property
    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <BrowsableAttribute(False)>
    <DataMemberAttribute()>
    Public Property TeamReference() As EntityReference(Of Team)
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of Team)("FirstAidJournalModel.FK_TeamMember_Team", "Team")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of Team)("FirstAidJournalModel.FK_TeamMember_Team", "Team", value)
            End If
        End Set
    End Property

    #End Region

End Class

''' <summary>
''' No Metadata Documentation available.
''' </summary>
<EdmEntityTypeAttribute(NamespaceName:="FirstAidJournalModel", Name:="Treatment")>
<Serializable()>
<DataContractAttribute(IsReference:=True)>
Public Partial Class Treatment
    Inherits EntityObject
    #Region "Factory Method"

    ''' <summary>
    ''' Create a new Treatment object.
    ''' </summary>
    ''' <param name="id">Initial value of the Id property.</param>
    ''' <param name="name">Initial value of the Name property.</param>
    ''' <param name="treatmentCategoryId">Initial value of the TreatmentCategoryId property.</param>
    Public Shared Function CreateTreatment(id As Global.System.Guid, name As Global.System.String, treatmentCategoryId As Global.System.Guid) As Treatment
        Dim treatment as Treatment = New Treatment
        treatment.Id = id
        treatment.Name = name
        treatment.TreatmentCategoryId = treatmentCategoryId
        Return treatment
    End Function

    #End Region

    #Region "Primitive Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=true, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property Id() As Global.System.Guid
        Get
            Return _Id
        End Get
        Set
            If (_Id <> Value) Then
                OnIdChanging(value)
                ReportPropertyChanging("Id")
                _Id = StructuralObject.SetValidValue(value)
                ReportPropertyChanged("Id")
                OnIdChanged()
            End If
        End Set
    End Property

    Private _Id As Global.System.Guid
    Private Partial Sub OnIdChanging(value As Global.System.Guid)
    End Sub

    Private Partial Sub OnIdChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property Name() As Global.System.String
        Get
            Return _Name
        End Get
        Set
            OnNameChanging(value)
            ReportPropertyChanging("Name")
            _Name = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("Name")
            OnNameChanged()
        End Set
    End Property

    Private _Name As Global.System.String
    Private Partial Sub OnNameChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnNameChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property TreatmentCategoryId() As Global.System.Guid
        Get
            Return _TreatmentCategoryId
        End Get
        Set
            OnTreatmentCategoryIdChanging(value)
            ReportPropertyChanging("TreatmentCategoryId")
            _TreatmentCategoryId = StructuralObject.SetValidValue(value)
            ReportPropertyChanged("TreatmentCategoryId")
            OnTreatmentCategoryIdChanged()
        End Set
    End Property

    Private _TreatmentCategoryId As Global.System.Guid
    Private Partial Sub OnTreatmentCategoryIdChanging(value As Global.System.Guid)
    End Sub

    Private Partial Sub OnTreatmentCategoryIdChanged()
    End Sub

    #End Region

    #Region "Navigation Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("FirstAidJournalModel", "FK_EventTreatment_Treatment", "EventTreatment")>
     Public Property EventTreatments() As EntityCollection(Of EventTreatment)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of EventTreatment)("FirstAidJournalModel.FK_EventTreatment_Treatment", "EventTreatment")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of EventTreatment)("FirstAidJournalModel.FK_EventTreatment_Treatment", "EventTreatment", value)
            End If
        End Set
    End Property

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("FirstAidJournalModel", "FK_Treatment_TreatmentCategory", "TreatmentCategory")>
    Public Property TreatmentCategory() As TreatmentCategory
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of TreatmentCategory)("FirstAidJournalModel.FK_Treatment_TreatmentCategory", "TreatmentCategory").Value
        End Get
        Set
            CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of TreatmentCategory)("FirstAidJournalModel.FK_Treatment_TreatmentCategory", "TreatmentCategory").Value = value
        End Set
    End Property
    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <BrowsableAttribute(False)>
    <DataMemberAttribute()>
    Public Property TreatmentCategoryReference() As EntityReference(Of TreatmentCategory)
        Get
            Return CType(Me, IEntityWithRelationships).RelationshipManager.GetRelatedReference(Of TreatmentCategory)("FirstAidJournalModel.FK_Treatment_TreatmentCategory", "TreatmentCategory")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedReference(Of TreatmentCategory)("FirstAidJournalModel.FK_Treatment_TreatmentCategory", "TreatmentCategory", value)
            End If
        End Set
    End Property

    #End Region

End Class

''' <summary>
''' No Metadata Documentation available.
''' </summary>
<EdmEntityTypeAttribute(NamespaceName:="FirstAidJournalModel", Name:="TreatmentCategory")>
<Serializable()>
<DataContractAttribute(IsReference:=True)>
Public Partial Class TreatmentCategory
    Inherits EntityObject
    #Region "Factory Method"

    ''' <summary>
    ''' Create a new TreatmentCategory object.
    ''' </summary>
    ''' <param name="id">Initial value of the Id property.</param>
    ''' <param name="name">Initial value of the Name property.</param>
    Public Shared Function CreateTreatmentCategory(id As Global.System.Guid, name As Global.System.String) As TreatmentCategory
        Dim treatmentCategory as TreatmentCategory = New TreatmentCategory
        treatmentCategory.Id = id
        treatmentCategory.Name = name
        Return treatmentCategory
    End Function

    #End Region

    #Region "Primitive Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=true, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property Id() As Global.System.Guid
        Get
            Return _Id
        End Get
        Set
            If (_Id <> Value) Then
                OnIdChanging(value)
                ReportPropertyChanging("Id")
                _Id = StructuralObject.SetValidValue(value)
                ReportPropertyChanged("Id")
                OnIdChanged()
            End If
        End Set
    End Property

    Private _Id As Global.System.Guid
    Private Partial Sub OnIdChanging(value As Global.System.Guid)
    End Sub

    Private Partial Sub OnIdChanged()
    End Sub

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <EdmScalarPropertyAttribute(EntityKeyProperty:=false, IsNullable:=false)>
    <DataMemberAttribute()>
    Public Property Name() As Global.System.String
        Get
            Return _Name
        End Get
        Set
            OnNameChanging(value)
            ReportPropertyChanging("Name")
            _Name = StructuralObject.SetValidValue(value, false)
            ReportPropertyChanged("Name")
            OnNameChanged()
        End Set
    End Property

    Private _Name As Global.System.String
    Private Partial Sub OnNameChanging(value As Global.System.String)
    End Sub

    Private Partial Sub OnNameChanged()
    End Sub

    #End Region

    #Region "Navigation Properties"

    ''' <summary>
    ''' No Metadata Documentation available.
    ''' </summary>
    <XmlIgnoreAttribute()>
    <SoapIgnoreAttribute()>
    <DataMemberAttribute()>
    <EdmRelationshipNavigationPropertyAttribute("FirstAidJournalModel", "FK_Treatment_TreatmentCategory", "Treatment")>
     Public Property Treatments() As EntityCollection(Of Treatment)
        Get
            Return CType(Me,IEntityWithRelationships).RelationshipManager.GetRelatedCollection(Of Treatment)("FirstAidJournalModel.FK_Treatment_TreatmentCategory", "Treatment")
        End Get
        Set
            If (Not value Is Nothing)
                CType(Me, IEntityWithRelationships).RelationshipManager.InitializeRelatedCollection(Of Treatment)("FirstAidJournalModel.FK_Treatment_TreatmentCategory", "Treatment", value)
            End If
        End Set
    End Property

    #End Region

End Class

#End Region


